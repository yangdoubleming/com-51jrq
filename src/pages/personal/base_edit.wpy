<style lang="scss">
    .base-edit-container {
        display: flex;
        flex-direction: column;
        .portrait-box {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 40rpx 0 10rpx;
            .icon-upload {
                margin-bottom: 10rpx;
                width: 140rpx;
                height: 140rpx;
            }
            text {
                font-size: 24rpx;
                color: #a0a0a0;
            }
        }
        .list-container {
            display: flex;
            flex-direction: column;
            padding: 0 40rpx;
            .list-item {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                font-size: 28rpx;
                color: #888888;
                height: 100rpx;
                border-bottom: #f1f1f1 solid 2rpx;
                .label {
                    min-width: 120rpx;
                    color: #353535;
                }
            }
            .input-area {
                input {
                    text-align: right;
                    color: #888888;
                    width: 100%;
                }
                .phcolor {
                    color: #888888;
                    text-align: right;
                }
            }
        }
        .btn-box {
            margin: 0 auto;
            margin-top: 20rpx;
            width:586rpx;
            height:80rpx;
            .save-btn {
                width:586rpx;
                height:80rpx;
                text-align:center;
                font-size:36rpx;
                color:#fff;
                background-color:#ff9e00;
            }
        }
    }
</style>

<template>
  <view class="base-edit-container">
      <form bindsubmit="baseEditSubmit">
            <view class="portrait-box" @tap.stop="changePortrait">
                <image mode="aspectFill" wx:if="{{showPortraitStatus}}" class="icon-upload" src="{{tempPortraitFilePath}}"></image>
                <image mode="aspectFill" wx:else="{{showPortraitStatus}}" class="icon-upload" src="/images/icons/upload_head.png"></image>
                <text>点击更换头像（图片大小不宜超过1M）</text>
            </view>
            <view class="list-container">
                <view class="list-item">
                    <text class="label">姓名</text>
                    <view class="input-area">
                        <input placeholder-class="phcolor" type="text" name="username" value="{{username}}" placeholder="请填写" >
                    </view>
                </view>
                <view class="list-item">
                    <text class="label">性别</text>
                    <picker name="sex" bindchange="bindSexChange" value="{{index}}" range="{{sex}}">
                        <view class="picker">
                            <text wx:if="{{sexStatus}}">{{u_sex ? u_sex : "请选择"}}</text>
                            <text wx:else>{{sex[indexSex]}}</text>
                        </view>
                    </picker>
                </view>
                <view class="list-item">
                    <text class="label">邮箱</text>
                    <view class="input-area">
                        <input placeholder-class="phcolor" type="text" name="email" value="{{email}}" placeholder="请填写" >
                    </view>
                </view>
                <view class="list-item">
                    <text class="label">居住城市</text>
                    <picker name="livecityid" bindchange="bindLiveCityChange" value="{{index}}" range="{{city}}">
                        <view class="picker">
                            <text wx:if="{{livecityStatus}}">{{u_city ? u_city : "请选择"}}</text>
                            <text wx:else>{{city[indexLiveCity]}}</text>
                        </view>
                    </picker>
                </view>
                <view class="list-item">
                    <text class="label">工作年限</text>
                    <picker name="workyears" bindchange="bindWorkYearsChange" value="{{index}}" range="{{workyears}}">
                        <view class="picker">
                            <text wx:if="{{workyearsStatus}}">{{u_workyears ? u_workyears : "请选择"}}</text>
                            <text wx:else>{{workyears[indexWorkYearsStatus]}}</text>
                        </view>
                    </picker>
                </view>
            </view>
            <view class="btn-box">
                <button class="save-btn" formType="submit">保存</button>
            </view>
      </form>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../../api/api';
import tip from '../../utils/tip';
import {LOGIN_INFO} from '../../utils/constants';

export default class BaseEdit extends wepy.page { 
  
   data = {
      dictionaryList: ["DICT_BASE_SEX", "DICT_COMP_CITY", "DICT_WORK_YEARS"],
      username: '',
      email: '',
      u_sex: '',   
      u_city: '', 
      u_workyears: '',    
      sex: [],
      city: [],
      workyears: [],
      sexStatus: true,
      livecityStatus: true,
      workyearsStatus: true,
      showPortraitStatus: false,
      tempPortraitFilePath: '',
      indexSex: '',
      indexLiveCity: '',
      indexWorkYearsStatus: '',
      loginInfo: {},
   }

   onLoad(){
       this.loginInfo =  wx.getStorageSync(LOGIN_INFO) || {};
       this.getPimg();
       // 获取数据字典
       const that = this;
        that.dictionaryList.forEach((item,index) => {
            switch (item){
                case "DICT_COMP_CITY":// 城市
                    this.getDictData(item).then(json => {
                        if (json.data.returnCode == "AAAAAAA") {
                            let arr = []
                            json.data.data.forEach((item,index)=>{
                                arr.push(item.label)
                            })
                            that.city = arr;
                            that.$apply();
                        } else {
                            tip.error(json.data.returnMsg);
                        }
                    })
                    break;
                case "DICT_BASE_SEX":// 城市
                    this.getDictData(item).then(json => {
                        if (json.data.returnCode == "AAAAAAA") {
                            let arr = []
                            json.data.data.forEach((item,index)=>{
                                arr.push(item.label)
                            })
                            that.sex = arr;
                            that.$apply();
                        } else {
                            tip.error(json.data.returnMsg);
                        }
                    })
                    break;
                case "DICT_WORK_YEARS":// 工作年限
                    this.getDictData(item).then(json => {
                        if (json.data.returnCode == "AAAAAAA") {
                            let arr = []
                            json.data.data.forEach((item,index)=>{
                                arr.push(item.label)
                            })
                            that.workyears = arr;
                            that.$apply();
                        } else {
                            tip.error(json.data.returnMsg);
                        }
                    })
                    break;  
            }          
        });
   }

   methods = {
       changePortrait(){
           const that = this;
           that.choosePortrait();
       },
       bindSexChange (event) {
           this.sexStatus = false;
           this.indexSex = event.detail.value;
       },
       bindLiveCityChange(event) {
           this.livecityStatus = false;
           this.indexLiveCity = event.detail.value;
       },
       bindWorkYearsChange(event) {
           this.workyearsStatus = false;
           this.indexWorkYearsStatus = event.detail.value;
       },
       baseEditSubmit(e){
           this.username = e.detail.value.username;
           this.email = e.detail.value.email;
           this.editPersonalInfo().then(json => {
               if(json.data.returnCode == 'AAAAAAA') {
                    tip.success("操作成功");
                    wx.switchTab({  
                        url: '../personal/personal',
                    })
                }else if(json.statusCode == 413){
                    tip.error("图片文件过大");
                }else{
                    tip.error(json.data.returnMsg);
                }
                wx.hideLoading()
           }).catch(err=>{
               tip.error(err.data.returnMsg);
           })
       }
   }

    choosePortrait(event) {
        const that = this;
        wx.chooseImage({
            count: 1,
            sizeType: ['compressed'],     // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'],        // 可以指定来源是相册还是相机，默认二者都有
            success(res) {
                if(res.tempFiles[0].size>1000000){
                    tip.error("图片大小超出限制");
                    return;
                }
                that.showPortraitStatus = true;
                that.tempPortraitFilePath = res.tempFilePaths[0];  
                that.$apply()     // 返回选定照片的本地文件路径列表
                that.uploadImgFile(that, res.tempFilePaths[0])
            },
            fail(){
                console.log(`获取图片失败`)
            }
        })
        
    }

    uploadImgFile(that, paths) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
         wx.uploadFile({
            url: `${api.apimall}/img/index`, //仅为示例，非真实的接口地址
            filePath: paths,
            name: 'face',
            success: function(res){
                //do something
                if(JSON.parse(res.data).result) {
                    that.base64Img = JSON.parse(res.data).msg;
                    that.$apply();
                } else {
                    console.log(res.data)
                }
            },
            fail: function(res){
                console.log(res)
            }
        })
    }

   //修改个人信息
    async editPersonalInfo() {
        wx.showLoading({
            title: '加载中',
        })
        const that = this;
        const json = await api.changeHeadImg({
            query: {
                head:{
                    type: "h",
                    transcode: "P0038"
                },
                data:{
                    tokenKey: that.loginInfo.tokenKey,
                    token: that.loginInfo.token,
                    sex: that.sex[that.indexSex] || that.u_sex,
                    city: that.city[that.indexLiveCity] || that.u_city,
                    workinglife: that.workyears[that.indexWorkYearsStatus] || that.u_workinglife,
                    username: that.username,
                    email: that.email,
                    imgsrc: that.base64Img,
                    imgtype: "png"
                }
            }
        })
        return json;
    }

    //获取个人信息
    async getPimg() {
        const that = this;
        const json = await api.getPimg({
            query: {
                    head: {
                        "transcode": "P0040",
                        "type": "h"
                    },
                    data: {
                        "tokenKey": that.loginInfo.tokenKey,
                        "token": that.loginInfo.token,
                    }
                }
        })
        if(json.data.returnCode == 'AAAAAAA') {
            if(json.data.data.headimg){
               that.showPortraitStatus = true; 
            }else{
                that.showPortraitStatus = false;
            }
            that.tempPortraitFilePath = json.data.data.headimg;
            that.username = json.data.data.username;
            that.u_sex = json.data.data.sex;
            that.email = json.data.data.email;
            that.u_city = json.data.data.city;
            that.u_workyears = json.data.data.workinglife;
            that.$apply();
        }else{
            tip.error(json.data.returnMsg);
        }
    }

    //获取数据字典
    async getDictData(groupcode) {
        const json = await api.getDictData({
        query: {
            head: {
                "transcode": "DC001",
                "type": "h"
            },
            data: {
                "groupcode": groupcode,
                "selAll": "true"
            }
        }
        })
        return json;
    }


}
</script>


