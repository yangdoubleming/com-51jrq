<style lang="less">
  page {
    background: #F0F1F2;
    .biggest {
        background: #fff;
        border-top: #f1f1f1 solid 1rpx;
        .block {
            margin: auto 40rpx;
            .list_item {
                display: flex;
                flex-direction: row;
                align-items: center;
                font-size: 28rpx;
                color: #888888;
                height: 80rpx;
                justify-content: space-between;
                border-bottom: #f1f1f1 solid 2rpx;
                .title {
                    color: #353535;
                    width: 35%;
                }
                .input {
                    width: 65%;
                    input {
                        text-align: right;
                        color: #888888;
                    }
                    .phcolor {
                        color: #888888;
                        text-align: right;
                    }
                }
            }
        }
    }
    .btn-box {
        margin-top: 70rpx;
        .save-btn{
            width: 600rpx;
            height: 64rpx;
            background: #ff9e00;
            color: white;
            text-align: center;
            line-height: 60rpx;
            font-size: 36rpx;
            border-radius: 10rpx;
        }
    }
  }
</style>
<template>
  <form bindsubmit="formSubmit">
    <view class="biggest">
        <view class="block">
            <view class="list_item">
                <view class="title">简历名称</view>
                <view class="input">
                    <input placeholder-class="phcolor" type="text" name="resumename" value="{{resumename}}" placeholder="请填写" >
                </view>
            </view>
            <view class="list_item">
                <view class="title">姓名</view>
                <view class="input">
                    <input placeholder-class="phcolor" type="text" name="username" value="{{username}}" placeholder="请填写" >
                </view>
            </view>
            <view class="list_item">
                <view class="title">性别</view>
                <picker name="sex" bindchange="bindPickerChange6" value="{{sex[index6]}}" range="{{sex}}">
                    <view class="picker" wx:if="{{sexstatus}}">
                        {{a_sex?a_sex:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{sexstatus}}">
                        {{sex[index6]}}
                    </view>
                </picker>
            </view>
            <view class="list_item">
                <view class="title">年龄</view>
                <picker name="borndate" mode="date" value="{{borndate}}" bindchange="bindDateChange">
                    <view class="picker">
                        {{borndate?borndate:"请选择 >"}}
                    </view>
                </picker>
            </view>
            <view class="list_item">
                <view class="title">户口所在地</view>
                <!-- <picker name="address" bindchange="bindPickerChange4" value="{{city[index4]}}" range="{{city}}">
                    <view class="picker" wx:if="{{workcitystatus}}">
                        {{workcity?workcity:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{workcitystatus}}">
                        {{city[index4]}}
                    </view>
                </picker> -->
                <view class="input">
                    <input placeholder-class="phcolor" type="text" name="address" value="{{address}}" placeholder="请填写" >
                </view>
            </view>
            <view class="list_item">
                <view class="title">工作年限</view>
                <picker name="workyears" bindchange="bindPickerChange" value="{{workyears[index]}}" range="{{workyears}}">
                    <view class="picker" wx:if="{{workyearsstatus}}">
                        {{a_workyears?a_workyears:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{workyearsstatus}}">
                        {{workyears[index]}}
                    </view>
                </picker>
            </view>
            <view class="list_item">
                <view class="title">手机</view>
                <view class="input">
                    <input placeholder-class="phcolor" type="text" name="telephone" value="{{telephone}}" placeholder="请填写" >
                </view>
            </view>
            <view class="list_item">
                <view class="title">邮箱</view>
                <view class="input">
                    <input placeholder-class="phcolor" type="text" name="email" value="{{email}}" placeholder="请填写" >
                </view>
            </view>
            <view class="list_item">
                <view class="title">工作状态</view>
                <picker name="jobstatus" bindchange="bindPickerChange2" value="{{jobstatus[index2]}}" range="{{jobstatus}}">
                    <view class="picker" wx:if="{{jobstatusstatus}}">
                        {{a_jobstatus?a_jobstatus:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{jobstatusstatus}}">
                       {{jobstatus[index2]}}
                    </view>
                </picker>
            </view>
            <view class="list_item">
                <view class="title">所在城市</view>
                <picker name="livecityid" bindchange="bindPickerChange5" value="{{city[index5]}}" range="{{city}}">
                    <view class="picker" wx:if="{{livecitystatus}}">
                        {{livecity?livecity:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{livecitystatus}}">
                        {{city[index5]}}
                    </view>
                </picker>
            </view>
            <view class="list_item">
                <view class="title">婚姻状况</view>
                <picker name="marital" bindchange="bindPickerChange3" value="{{marital[index3]}}" range="{{marital}}">
                    <view class="picker" wx:if="{{maritalstatus}}">
                        {{a_marital?a_marital:'请选择'}}
                    </view>
                    <view class="picker" wx:else="{{maritalstatus}}">
                        {{marital[index3]}}
                    </view>
                </picker>
            </view>
        </view>
    </view>
    <view class="btn-box">
      <button class="save-btn" formType="submit">保存</button>
    </view>
  </form>
</template>
<script>
  import wepy from 'wepy'
  import api from '../../api/api';
  import tip from '../../utils/tip';

  export default class BaseInfo extends wepy.page {

      config = {
        navigationBarTitleText: '基本信息',
      }

      components = {
      }
      
     data = {
        username: '',
        resumename:'',
        workyears:[],
        borndate: '',
        telephone:'',
        index: '',
        index2: '',
        index3: '',
        index4: '',
        index5: '',
        index6: '',
        email: "",
        jobstatus: [],
        marital:[],
        city: [],
        sex: [],
        baseInfo:{},
        address: '',
        // ============
        workcity:'',
        workcitystatus:true,
        a_workyears:'',
        workyearsstatus:true,
        a_jobstatus:'',
        jobstatusstatus:true,
        livecity:'',
        livecitystatus:true,
        a_marital:'',
        maritalstatus:true,
        a_sex:'',
        sexstatus:true,
        token:'',
        tokenKey:'',
        resumeid: ''
    }

      onLoad(options) { 
        this.resumeid = options.resumeid; 
        this.$apply();
        // 获取登录信息
        const that = this;
        wx.getStorage({
            key: 'loginData',
            success: function(res) {
                that.token = res.data.token;
                that.tokenKey = res.data.tokenKey;
                //获取简历基本信息
                that.getResumeInfo(options.resumeid,res.data.token,res.data.tokenKey).then(json => {
                    if (json.data.returnCode == "AAAAAAA") {
                        var baseInfo = JSON.parse(json.data.data);
                        that.baseInfo = {
                            "username": baseInfo.username,
                            "resumename": baseInfo.newresumename,
                            "borndate": baseInfo.borndate,
                            "address": baseInfo.address,
                            "workyears": baseInfo.workyears,
                            "jobstatus": baseInfo.jobstatus,
                            "livecityid": baseInfo.livecityid,
                            "marital": baseInfo.marital,
                            "telephone": baseInfo.telephone,
                            "email": baseInfo.email,
                            "sex": baseInfo.sex
                        }
                        that.username = baseInfo.username;
                        that.resumename = baseInfo.newresumename;
                        that.borndate = baseInfo.borndate;
                        that.address = baseInfo.address;
                        that.a_workyears = baseInfo.workyears;
                        that.a_jobstatus = baseInfo.jobstatus;
                        that.livecity = baseInfo.livecityid;
                        that.a_marital = baseInfo.marital;
                        that.a_sex = baseInfo.sex;
                        that.telephone = baseInfo.telephone;
                        that.email = baseInfo.email;
                        that.$apply();
                    } else {
                        tip.error(json.returnMsg);
                    }
                })
            } 
        })
            // 获取数据字典
            const arr = ["DICT_COMP_CITY","DICT_RESUME_WORKYEAR","DICT_RESUME_JOBSTATU","DICT_RESUME_WEDDING","DICT_BASE_SEX"]
            arr.forEach((item,index) => {
            switch (item)
            {
            case "DICT_COMP_CITY":// 城市
                this.getDict(item).then(json => {
                if (json.data.returnCode == "AAAAAAA") {
                    var arr = []
                    json.data.data.forEach((item,index)=>{
                        arr.push(item.label)
                    })
                    that.city = arr;
                    that.$apply();
                } else {
                    tip.error(json.returnMsg);
                }
                })
                break;
            case "DICT_RESUME_WORKYEAR":// 工作年限
                this.getDict(item).then(json => {
                if (json.data.returnCode == "AAAAAAA") {
                    var arr = []
                    json.data.data.forEach((item,index)=>{
                        arr.push(item.label)
                    })
                    that.workyears = arr;
                    that.$apply();
                } else {
                    tip.error(json.returnMsg);
                }
                })
                break;
            case "DICT_RESUME_JOBSTATU":// 工作状况
                this.getDict(item).then(json => {
                if (json.data.returnCode == "AAAAAAA") {
                    var arr = []
                    json.data.data.forEach((item,index)=>{
                        arr.push(item.label)
                    })
                    that.jobstatus = arr;
                    that.$apply();
                } else {
                    tip.error(json.returnMsg);
                }
                })
                break;
            case "DICT_RESUME_WEDDING":// 婚姻状况
                this.getDict(item).then(json => {
                if (json.data.returnCode == "AAAAAAA") {
                    var arr = []
                    json.data.data.forEach((item,index)=>{
                        arr.push(item.label)
                    })
                    that.marital = arr;
                    that.$apply();
                } else {
                    tip.error(json.returnMsg);
                }
                })
                break;
            case "DICT_BASE_SEX":// 性别
                this.getDict(item).then(json => {
                if (json.data.returnCode == "AAAAAAA") {
                    var arr = []
                    json.data.data.forEach((item,index)=>{
                        arr.push(item.label)
                    })
                    that.sex = arr;
                    that.$apply();
                } else {
                    tip.error(json.returnMsg);
                }
                })
                break;
            }
        });
      }
      methods = {
        // 提交表单--基本信息编辑新增
        formSubmit: function(e) {
            wx.showLoading({
                title: '加载中',
            })
            var obj2 = {
                "token": this.token,
                "tokenKey": this.tokenKey,
                "resumeid": this.resumeid
            }
            if(!obj2.resumeid){
                delete obj2['resumeid']
            }
            const that = this;
            this.changeBaseInfo(e.detail.value,obj2).then(data=>{
                if(data.data && data.data.returnCode == "AAAAAAA") {
                    wx.redirectTo({
                        url: `resume?resumeid=${data.data.resumeid ||that.resumeid}`
                    })
                }else{
                    console.log(data)
                }
                wx.hideLoading()
            })
        },
        bindDateChange: function(e) {
            this.borndate = e.detail.value;
            this.$apply();
        },
        bindPickerChange: function(e) {
            this.workyearsstatus = false ;
            this.index = e.detail.value;
            this.$apply();
        },
        bindPickerChange2: function(e) {
            this.jobstatusstatus = false;
            this.index2 = e.detail.value;
            this.$apply();
        },
        bindPickerChange3: function(e) {
            this.maritalstatus = false;
            this.index3 = e.detail.value;
            this.$apply();
        },
        bindPickerChange4: function(e) {
            this.workcitystatus = false ;
            this.index4 = e.detail.value;
            this.$apply();
        },
        bindPickerChange5: function(e) {
            this.livecitystatus = false;
            this.index5 = e.detail.value;
            this.$apply();
        },
        bindPickerChange6: function(e) {
            this.sexstatus = false;
            this.index6 = e.detail.value;
            this.$apply();
        }
        
    };
    
    //获取数据字典
    async getDict(code) {
        const json = await api.getDictData({
        query: {
                head: {
                    "transcode": "DC001",
                    "type": "h"
                },
                data: {
                    "groupcode": code,
                    "selAll": "true"
                }
            }
        })
        return json;
    }

    //获取简历基本信息
    async getResumeInfo(resumeid, token, tokenKey) {
        const json = await api.getResumeInfo({
        query: {
                head: {
                    "transcode": "M0003",
                    "type": "h"
                },
                data: {
                    "token": token,
                    "tokenKey": tokenKey,
                    "resumeid": resumeid
                }
            }
        })
        return json;
    }
    //修改表单数据
    async changeBaseInfo(obj, obj2) {
        var data = obj2
        for (var Key in obj){
            if(!obj[Key]){
                delete obj[Key]
            }
        }
        let resultObj = Object.assign(data, this.baseInfo, obj);
        const json = await api.getResumeInfo({
        query: {
                head: {
                    "transcode": "M0013",
                    "type": "h"
                },
                data: resultObj
            }
        })
        return json;
    }

  }
</script>
